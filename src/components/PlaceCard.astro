---
import { Place } from "astro:db";
import Link from "./buttons/Link.astro";
import Rating from "./Rating.astro";
import Tag from "./Tag.astro";

interface Props {
    id: string;
    name: string;
    nameRoman: string | null;
    rating: number | null;
    review: string | null;
    image: string;
    website: string | null;
    address: string;
    gmaps: string;
    city: string;
    state: string;
    country: string;
    tags: string;
    video: string | null;
    needsReserve: boolean;
}

const {
    id,
    name,
    nameRoman,
    rating,
    review,
    image,
    website,
    address,
    gmaps,
    city,
    state,
    country,
    tags,
    video,
    needsReserve,
} = Astro.props;
---

<!--
<a
    href={`/launch/${id}`}
    class="rounded-lg border shadow-md bg-gray-800 border-gray-700 hover:scale-105 hover:bg-gray-700 hover:border-gray-500 transition flex flex-col"
>
    <picture class="flex justify-center p-4">
        <img class="mb-5 rounder-lg" src={img} alt={`Patch for launch ${id}`} />
    </picture>

    <header class="p-4 flex-grow">
        <span
            class:list={[
                "text-xs font-semibold mr-2 px-2.5 py-0.5 rounded",
                {
                    "bg-green-400 text-green-900": success,
                    "bg-red-400 text-red-900": !success,
                },
            ]}
        >
            {successText}
        </span>

        <h2 class="my-2 text-2xl font-bold tracking-tight text-white">
            Flight #{flightNumber}
        </h2>

        <p class="mb-4 font-light text-gray-400">
            {
                details != null && details?.length > 100
                    ? details.slice(0, 100) + " ..."
                    : details
            }
        </p>
    </header>
</a>-->
<div class="max-w-sm w-full lg:max-w-full flex">
    <div
        class="h-48 lg:h-auto lg:w-48 flex-none bg-cover rounded-l-2xl text-center overflow-hidden"
        style=`background-image: url(${image})`
        title="Restaurant Image"
    >
    </div>
    <div
        class="border-r border-b border-l border-gray-400 lg:border-l-0 lg:border-t lg:border-gray-400 bg-white rounded-r-2xl p-4 flex flex-col flex-1 justify-between leading-normal"
    >
        <div class="align-middle">
            {
                rating && (
                    <div class="float-right">
                        <Rating score={rating} />
                    </div>
                )
            }
            {
                nameRoman && (
                    <p class="font-normal text-sm text-gray-500 dark:text-gray-400">
                        {nameRoman}
                    </p>
                )
            }
            <div
                class="mb-4 text-4xl font-semibold tracking-tight text-gray-900 dark:text-white"
            >
                {name}
            </div>
            {website && <Link href={website}>Website</Link>}
            <br />
            <Link href={gmaps}>{address}</Link>
            <div class="pt-4 pb-0 float-right">
                {tags.split(",").map((tag) => <Tag>{tag}</Tag>)}
            </div>
        </div>
    </div>
</div>
